// - Ch·ªçn t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ c√≥ thu·ªôc t√≠nh 'button-status'
// - N·∫øu t·ªìn t·∫°i √≠t nh·∫•t m·ªôt n√∫t l·ªçc tr·∫°ng th√°i v·ªõi th·ª±c hi·ªán
//   - T·∫°o 1 ƒë·ªëi t∆∞·ª£ng URL d·ª±a tr√™n ƒë∆∞·ªùng d·∫´n hi·ªán t·∫°i
//   - L·∫∑p qua t·ª´ng n√∫t tr·∫°ng th√°i
//     -G√°n s·ª± ki·ªán click cho m·ªói n√∫t
//       - L·∫•y gi√° tr·ªã c·ªßa thu·ªôc t√≠nh 'button-status' t·ª´ n√∫t ƒë∆∞·ª£c click
//       - N·∫øu c√≥ gi√° tr·ªã 'status', c·∫≠p nh·∫≠t trong URL
//       - N·∫øu kh√¥ng c√≥ (l·ªçc t·∫•t c·∫£) x√≥a 'status' kh·ªèi url

//     - ƒêi·ªÅu h∆∞·ªõng tr√¨nh duy·ªát t·ªõi url m·ªõi, s·∫Ω reload l·∫°i trang

const buttonStatus = document.querySelectorAll("[button-status]");

if (buttonStatus.length > 0) {
  let url = new URL(window.location.href);

  buttonStatus.forEach((button) => {
    button.addEventListener("click", () => {
      const status = button.getAttribute("button-status");

      if (status) {
        url.searchParams.set("status", status);
      } else {
        url.searchParams.delete("status");
      }

      window.location.href = url.href;
    });
  });
}

// T√¨m ki·∫øm
const formSearch = document.querySelector("#form-search");
if (formSearch) {
  let url = new URL(window.location.href);

  formSearch.addEventListener("submit", (e) => {
    e.preventDefault(); // ch·∫∑n s·ª± ki·ªán m·∫∑t ƒë·ªãnh ngƒÉn load l·∫°i trang
    const keyword = e.target.elements.keyword.value;

    if (keyword) {
      url.searchParams.set("keyword", keyword);
    } else {
      url.searchParams.delete("keyword");
    }

    window.location.href = url.href;
  });
}

// Checkbox Multi
const checkboxMulti = document.querySelector("[checkbox-multi]");
if (checkboxMulti) {
  const inputCheckAll = checkboxMulti.querySelector("input[name='checkall']");
  const inputIds = checkboxMulti.querySelectorAll("input[name='id']");

  // X·ª≠ l√Ω s·ª± ki·ªán khi click v√†o checkbox "Ch·ªçn t·∫•t c·∫£"
  inputCheckAll.addEventListener("change", () => {
    inputIds.forEach((input) => {
      input.checked = inputCheckAll.checked;
    });
  });

  // X·ª≠ l√Ω s·ª± ki·ªán khi click v√†o c√°c checkbox item
  inputIds.forEach((input) => {
    input.addEventListener("change", () => {
      const countChecked = checkboxMulti.querySelectorAll(
        "input[name='id']:checked"
      ).length;

      // C·∫≠p nh·∫≠t tr·∫°ng th√°i c·ªßa checkbox "Ch·ªçn t·∫•t c·∫£"
      inputCheckAll.checked = countChecked === inputIds.length;
    });
  });
}
// End Checkbox Multi

// Form Chang Multi
const formChangeMulti = document.querySelector("[form-change-multi]");

if (formChangeMulti) {
  formChangeMulti.addEventListener("submit", function handleSubmit(e) {
    e.preventDefault();

    const checkboxMulti = document.querySelector("[checkbox-multi]");
    const inputChecked = checkboxMulti.querySelectorAll(
      "input[name='id']:checked"
    );

    if (inputChecked.length > 0) {
      const inputIds = formChangeMulti.querySelector("input[name='ids']");
      const inputRedirect = formChangeMulti.querySelector(
        "input[name='redirect']"
      );

      // G√°n danh s√°ch ID
      let ids = [];
      inputChecked.forEach((input) => ids.push(input.value));
      inputIds.value = ids.join(",");

      // G√°n gi√° tr·ªã redirect v·ªÅ URL hi·ªán t·∫°i
      inputRedirect.value = window.location.pathname + window.location.search;

      // üëâ G·ª° b·ªè event ƒë·ªÉ tr√°nh l·∫∑p submit sau khi g·ªçi l·∫°i
      formChangeMulti.removeEventListener("submit", handleSubmit);
      formChangeMulti.submit();
    } else {
      alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t 1 b·∫£n ghi");
    }
  });
}

// End Form Chang Multi
